"""Initial schema copy

Revision ID: 290127e82ebe
Revises: 
Create Date: 2024-11-23 11:21:50.507410

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '290127e82ebe'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('leaser',
    sa.Column('leaser_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('info', sa.String(length=150), nullable=True),
    sa.Column('leaser_additional_info', sa.String(length=150), nullable=True),
    sa.PrimaryKeyConstraint('leaser_id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('login', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(length=50), nullable=True),
    sa.Column('nino', sa.String(length=50), nullable=True),
    sa.Column('fullname', sa.String(length=150), nullable=True),
    sa.Column('photo', sa.String(length=150), nullable=True),
    sa.Column('contacts', sa.String(length=150), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('login'),
    sa.UniqueConstraint('nino')
    )
    op.create_table('complain',
    sa.Column('complain_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('complain_text', sa.String(length=150), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('complain_id')
    )
    op.create_table('item',
    sa.Column('item_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('photo', sa.String(length=150), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('description', sa.String(length=150), nullable=True),
    sa.Column('price_hour', sa.REAL(), nullable=True),
    sa.Column('price_week', sa.REAL(), nullable=True),
    sa.Column('price_month', sa.REAL(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('item_id')
    )
    op.create_table('contract',
    sa.Column('contract_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('text', sa.String(length=150), nullable=True),
    sa.Column('start_date', sa.String(length=150), nullable=True),
    sa.Column('end_date', sa.String(length=150), nullable=True),
    sa.Column('leaser', sa.Integer(), nullable=True),
    sa.Column('taker', sa.Integer(), nullable=True),
    sa.Column('item', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=150), nullable=True),
    sa.ForeignKeyConstraint(['item'], ['item.item_id'], ),
    sa.ForeignKeyConstraint(['leaser'], ['leaser.leaser_id'], ),
    sa.ForeignKeyConstraint(['taker'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('contract_id')
    )
    op.create_table('feedback',
    sa.Column('feedback_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('author', sa.Integer(), nullable=True),
    sa.Column('user', sa.Integer(), nullable=True),
    sa.Column('feedback_text', sa.String(length=150), nullable=True),
    sa.Column('grade', sa.String(length=150), nullable=True),
    sa.Column('contract', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['author'], ['users.user_id'], ),
    sa.ForeignKeyConstraint(['contract'], ['contract.contract_id'], ),
    sa.ForeignKeyConstraint(['user'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('feedback_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('feedback')
    op.drop_table('contract')
    op.drop_table('item')
    op.drop_table('complain')
    op.drop_table('users')
    op.drop_table('leaser')
    # ### end Alembic commands ###
